version: "3"

vars:
  COMPOSE_PROJECT_NAME: moderateapi
  TESTS_COMPOSE_PROJECT_NAME: moderateapi_tests
  TESTS_POSTGRES_USER: postgres
  TESTS_POSTGRES_PASSWORD: postgres
  TESTS_POSTGRES_DB: testsmoderateapi
  TESTS_POSTGRES_PUBLIC_PORT: 15432
  TESTS_POSTGRES_URL: postgresql+asyncpg://{{.TESTS_POSTGRES_USER}}:{{.TESTS_POSTGRES_PASSWORD}}@localhost:{{.TESTS_POSTGRES_PUBLIC_PORT}}/{{.TESTS_POSTGRES_DB}}
  TESTS_MINIO_PUBLIC_PORT: 19000
  TESTS_MINIO_PUBLIC_PORT_CONSOLE: 19001
  TESTS_MINIO_ROOT_USER: minio
  TESTS_MINIO_ROOT_PASSWORD: minio123
  TESTS_MINIO_REGION: eu-central-1
  TESTS_MINIO_BUCKET_NAME: moderateapi-tests
  TESTS_MINIO_ENDPOINT_URL: http://localhost:{{.TESTS_MINIO_PUBLIC_PORT}}
  DEV_KEYCLOAK_PORT: '{{default "8989" .DEV_KEYCLOAK_PORT}}'
  DEV_POSTGRES_PORT: '{{default "5433" .DEV_POSTGRES_PORT}}'
  MAIN_IP_ADDRESS:
    sh: ip route get 1.2.3.4 | awk '{print $7}'
  TRUST_COMPOSE_PROJECT_NAME: moderate-trust
  TRUST_MONGO_PORT: 27117
  TRUST_API_PORT: 8081
  TRUST_API_URL: http://{{.MAIN_IP_ADDRESS}}:{{.TRUST_API_PORT}}

env:
  COMPOSE_PROJECT_NAME: "{{.COMPOSE_PROJECT_NAME}}"
  TESTS_POSTGRES_USER: "{{.TESTS_POSTGRES_USER}}"
  TESTS_POSTGRES_PASSWORD: "{{.TESTS_POSTGRES_PASSWORD}}"
  TESTS_POSTGRES_DB: "{{.TESTS_POSTGRES_DB}}"
  TESTS_POSTGRES_PUBLIC_PORT: "{{.TESTS_POSTGRES_PUBLIC_PORT}}"
  TESTS_POSTGRES_URL: "{{.TESTS_POSTGRES_URL}}"
  TESTS_MINIO_PUBLIC_PORT: "{{.TESTS_MINIO_PUBLIC_PORT}}"
  TESTS_MINIO_PUBLIC_PORT_CONSOLE: "{{.TESTS_MINIO_PUBLIC_PORT_CONSOLE}}"
  TESTS_MINIO_ROOT_USER: "{{.TESTS_MINIO_ROOT_USER}}"
  TESTS_MINIO_ROOT_PASSWORD: "{{.TESTS_MINIO_ROOT_PASSWORD}}"
  TESTS_MINIO_REGION: "{{.TESTS_MINIO_REGION}}"
  TESTS_MINIO_BUCKET_NAME: "{{.TESTS_MINIO_BUCKET_NAME}}"
  TESTS_MINIO_ENDPOINT_URL: "{{.TESTS_MINIO_ENDPOINT_URL}}"
  DEV_KEYCLOAK_PORT: "{{.DEV_KEYCLOAK_PORT}}"
  DEV_POSTGRES_PORT: "{{.DEV_POSTGRES_PORT}}"
  MODERATE_API_S3__ACCESS_KEY: "{{.MINIO_ROOT_USER}}"
  MODERATE_API_S3__SECRET_KEY: "{{.MINIO_ROOT_PASSWORD}}"
  MODERATE_API_S3__ENDPOINT_URL: http://minio:9000
  MODERATE_API_S3__REGION: "{{.MINIO_REGION}}"
  MODERATE_API_S3__BUCKET: "{{.MINIO_BUCKET_NAME}}"
  MODERATE_API_TRUST_SERVICE__ENDPOINT_URL: "{{.TRUST_API_URL}}"

dotenv: [.env.dev, .env.dev.default]

tasks:
  dev-up:
    desc: Start the development stack
    cmds:
      - task: trust-up
      - docker compose -f {{.ROOT_DIR}}/docker-compose-dev.yml up -d --build

  dev-up-gcs:
    desc: Start the development stack using GCS instead of the local MinIO
    requires:
      vars: [ACCESS_KEY, SECRET_KEY]
    env:
      MODERATE_API_S3__ACCESS_KEY: "{{.ACCESS_KEY}}"
      MODERATE_API_S3__SECRET_KEY: "{{.SECRET_KEY}}"
      MODERATE_API_S3__ENDPOINT_URL: https://storage.googleapis.com
      MODERATE_API_S3__REGION: '{{default "europe-west1" .GCS_REGION}}'
      MODERATE_API_S3__BUCKET: '{{default "moderateapi-tests" .GCS_BUCKET}}'
    cmds:
      - task: trust-up
      - docker compose -f {{.ROOT_DIR}}/docker-compose-dev.yml up -d --build

  dev-down:
    desc: Stop and remove all traces of the development stack
    cmds:
      - docker compose -f {{.ROOT_DIR}}/docker-compose-dev.yml down -v
      - task: trust-down

  test-deps-up:
    desc: Start the services needed for testing
    cmds:
      - >
        docker compose
        -p {{.TESTS_COMPOSE_PROJECT_NAME}}
        -f {{.ROOT_DIR}}/docker-compose-tests.yml
        up -d --build --wait

  test-deps-down:
    desc: Stop the services needed for testing
    cmds:
      - >
        docker compose
        -p {{.TESTS_COMPOSE_PROJECT_NAME}}
        -f {{.ROOT_DIR}}/docker-compose-tests.yml
        down -v

  export-test-env:
    silent: true
    desc: Export the environment variables to run the tests
    cmds:
      - >
        echo "
        export TESTS_POSTGRES_URL={{.TESTS_POSTGRES_URL}} &&
        export TESTS_MINIO_PUBLIC_PORT={{.TESTS_MINIO_PUBLIC_PORT}} &&
        export TESTS_MINIO_PUBLIC_PORT_CONSOLE={{.TESTS_MINIO_PUBLIC_PORT_CONSOLE}} &&
        export TESTS_MINIO_ROOT_USER={{.TESTS_MINIO_ROOT_USER}} &&
        export TESTS_MINIO_ROOT_PASSWORD={{.TESTS_MINIO_ROOT_PASSWORD}} &&
        export TESTS_MINIO_REGION={{.TESTS_MINIO_REGION}} &&
        export TESTS_MINIO_BUCKET_NAME={{.TESTS_MINIO_BUCKET_NAME}} &&
        export TESTS_MINIO_ENDPOINT_URL={{.TESTS_MINIO_ENDPOINT_URL}}"

  test:
    desc: Run the test suite
    cmds:
      - task: test-deps-up
      - poetry run pytest -v
      - task: test-deps-down

  push-minio-image:
    desc: Push a MinIO image tailored for GitHub Actions
    cmds:
      - >
        docker build --platform linux/amd64
        -f {{.ROOT_DIR}}/Dockerfile.minio
        -t {{.ACTIONS_MINIO_IMAGE_LOCAL}}
        {{.ROOT_DIR}}
      - docker tag {{.ACTIONS_MINIO_IMAGE_LOCAL}} {{.ACTIONS_MINIO_IMAGE_REMOTE}}:{{.ACTIONS_MINIO_IMAGE_REMOTE_TAG}}
      - docker push {{.ACTIONS_MINIO_IMAGE_REMOTE}}:{{.ACTIONS_MINIO_IMAGE_REMOTE_TAG}}

  trust-up:
    desc: Start the Trust Services Compose stack
    env:
      COMPOSE_PROJECT_NAME: "{{.TRUST_COMPOSE_PROJECT_NAME}}"
      MONGO_PORT: "{{.TRUST_MONGO_PORT}}"
      TRUST_PORT: "{{.TRUST_API_PORT}}"
    cmds:
      - echo "ðŸ“£ You need to be logged in to Artifact Registry to pull the Trust Services images"
      - echo "ðŸ’» gcloud auth configure-docker europe-west1-docker.pkg.dev"
      - docker compose -f {{.ROOT_DIR}}/docker-compose-trust.yml up -d --build --wait

  trust-down:
    desc: Stop and remove all traces of the Trust Services stack
    env:
      COMPOSE_PROJECT_NAME: "{{.TRUST_COMPOSE_PROJECT_NAME}}"
      MONGO_PORT: "{{.TRUST_MONGO_PORT}}"
      TRUST_PORT: "{{.TRUST_API_PORT}}"
    cmds:
      - docker compose -f {{.ROOT_DIR}}/docker-compose-trust.yml down -v
