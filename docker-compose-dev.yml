version: "3"
services:
  api:
    build: .
    restart: on-failure
    ports:
      - 8000:8000
    environment:
      LOG_LEVEL: DEBUG
      MODERATE_API_OPENID_CONFIG_URL: http://keycloak:8080/realms/moderate/.well-known/openid-configuration
      MODERATE_API_POSTGRES_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/moderateapi
  apisix:
    image: apache/apisix:3.5.0-debian
    restart: on-failure
    ports:
      - 9080:9080
      - 9092:9092
    volumes:
      - type: bind
        source: ./apisix-dev-apisix.yaml
        target: /usr/local/apisix/conf/apisix.yaml
      - type: bind
        source: ./apisix-dev-config.yaml
        target: /usr/local/apisix/conf/config.yaml
    depends_on:
      - keycloak
    extra_hosts:
      # For portability with Linux
      - host.docker.internal:host-gateway
  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    restart: on-failure
    ports:
      - 8080:8080
    command: [start-dev]
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_PROXY: edge
      KC_LOG_CONSOLE_COLOR: "true"
      KC_LOG_LEVEL: info
      KC_DB: postgres
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: ${KEYCLOAK_POSTGRES_DBNAME}
      KC_DB_URL_HOST: postgres
      KC_HTTP_ENABLED: "true"
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      PROXY_ADDRESS_FORWARDING: "true"
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    image: postgres:15
    restart: on-failure
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: ${KEYCLOAK_POSTGRES_DBNAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./createdb.sh:/docker-entrypoint-initdb.d/01.sh
    healthcheck:
      test: [CMD-SHELL, pg_isready -U postgres]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  keycloak_init:
    image: agmangas/moderate-cli:0.2.4
    restart: on-failure
    command:
      [
        /bin/bash,
        -c,
        moderatecli create-keycloak-realm && moderatecli create-apisix-client,
      ]
    environment:
      KEYCLOAK_URL: http://keycloak:8080
      KEYCLOAK_ADMIN_USER: ${KEYCLOAK_ADMIN_USER}
      KEYCLOAK_ADMIN_PASS: ${KEYCLOAK_ADMIN_PASSWORD}
      MODERATE_REALM: moderate
      APISIX_CLIENT_ID: apisix
      APISIX_CLIENT_SECRET: apisix
      APISIX_CLIENT_RESOURCE_MODERATE_API: moderateapi
    depends_on:
      - keycloak
  minio:
    image: minio/minio:RELEASE.2022-09-07T22-25-02Z
    command: server /data --console-address ":9001"
    restart: on-failure
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_SERVER_URL: http://minio:9000
      MINIO_REGION: ${MINIO_REGION}
    volumes:
      - minio_data:/data
    healthcheck:
      test: [CMD, curl, -f, http://localhost:9000/minio/health/live]
      interval: 10s
      timeout: 10s
      retries: 3
  minio-setup:
    image: debian:bullseye
    command:
      - /bin/bash
      - /opt/minio-setup.sh
    restart: on-failure
    environment:
      MINIO_USER: ${MINIO_ROOT_USER}
      MINIO_PASS: ${MINIO_ROOT_PASSWORD}
      BUCKET_NAME: ${MINIO_BUCKET_NAME}
      MINIO_URL: http://minio:9000
    volumes:
      - type: bind
        source: ./minio-setup.sh
        target: /opt/minio-setup.sh
    depends_on:
      minio:
        condition: service_healthy
volumes:
  postgres_data: {}
  minio_data: {}
